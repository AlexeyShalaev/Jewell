from aiogram import types, Dispatcher

from TelegramBot.tgbot.misc.crypt import create_token
from TelegramBot.tgbot.services.MongoDB.users import get_user_by_telegram_id, update_auth_token

web_url = 'http://127.0.0.5:5000/login'


async def bot_account_login(message: types.Message):
    r = get_user_by_telegram_id(message.from_user.id)
    if r.success and r.data.telegram_auth:
        status, token = create_token()
        if status:
            update_auth_token(r.data.id, token)
            await message.answer(f'{web_url}/{token}')
        else:
            await message.answer(f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å—Å—ã–ª–∫—É –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.\n {web_url}")
    else:
        await message.answer(
            f"–ü—Ä–∏–≤—è–∂–∏—Ç–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é —á–µ—Ä–µ–∑ —Ç–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç–∞ –Ω–∞ —Å–∞–π—Ç–µ –¥–ª—è –±–æ–ª–µ–µ –±—ã—Å—Ç—Ä–æ–≥–æ –≤—Ö–æ–¥–∞.\n {web_url}")


async def bot_account_sessions(message: types.Message):
    # todo sessions
    await message.answer("–°–µ—Å—Å–∏–∏")


def register_account(dp: Dispatcher):
    dp.register_message_handler(bot_account_login, text="–í–æ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç üì≤", registered=True)
    dp.register_message_handler(bot_account_sessions, text="–°–µ—Å—Å–∏–∏ üñ•", registered=True)
