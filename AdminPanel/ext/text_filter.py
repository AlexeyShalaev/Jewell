import re


class TextFilter:
    __bad_words: list = ['бля', 'блядь', 'блять', 'бзъеб', 'битч', 'соск', 'соск', 'сунт', 'ебал', 'еб', 'еб', 'ебаньк',
                         'ебнут', 'ебнуты', 'ебнута', 'ебла', 'еба', 'еба', 'ебуч', 'еба', 'ебет', 'еблант', 'фак',
                         'фуск', 'факер', 'фускер', 'факинг', 'фускинг', 'хуя', 'заеб', 'заеб', 'заебат', 'архипиздр',
                         'аху', 'ахуел', 'ахует', 'бзден', 'бздет', 'бздех', 'бздец', 'бздит', 'бздиц', 'бздло',
                         'бзднут', 'бздун', 'бздунья', 'бздюх', 'бздюшк', 'бздюшк', 'бля', 'блябу', 'блябуд', 'бляд',
                         'бляди', 'блядин', 'блядищ', 'блядки', 'блядов', 'блядство', 'блядун', 'блядун', 'блядунья',
                         'блядь', 'блядюг', 'блять', 'ваф', 'вафлр', 'вафлер', 'взъебк', 'взьебк', 'взьебыва', 'въеб',
                         'въебался', 'въебен', 'въеб', 'въебыва', 'выблядок', 'выблядыш', 'выеб', 'выеба', 'выеб',
                         'выебнулся', 'выебон', 'выебываться', 'выпердет', 'высраться', 'выссаться', 'вьеб', 'гавн',
                         'гавнюк', 'гавнючк', 'гандон', 'гнид', 'гнид', 'гнид', 'говенк', 'говенны', 'говешк',
                         'говназия', 'говнец', 'говнищ', 'говн', 'говноед', 'говнолинк', 'говночист', 'говнюк',
                         'говнюх', 'говнядин', 'говняк', 'говняны', 'говнят', 'гондон', 'гондурас', 'глуп', 'глупы',
                         'глупышк', 'глупых', 'даун', 'даунидз', 'дауних', 'даун', 'даун', 'доебываться', 'долбоеб',
                         'долбоб', 'долбоящер', 'дрисня', 'дрист', 'дристанут', 'дриста', 'дристун', 'дристух',
                         'дрочелл', 'дроч', 'дрочилк', 'дрочисты', 'дроч', 'дрочк', 'дрочун', 'дура', 'дурак', 'дурач',
                         'дурачок', 'дурочк', 'еба', 'ебут', 'бан', 'еба', 'ебуч', 'еба', 'еба', 'ебальник', 'еба',
                         'ебанама', 'ебанат', 'ебаная', 'баная', 'ебаническ', 'ебанны', 'ебанныиврот', 'ебан', 'ебанут',
                         'ебануться', 'бан', 'ебан', 'ебаны', 'ебаньк', 'ебар', 'ебат', 'бат', 'ебатория', 'еба',
                         'ебатькопа', 'ебаться', 'ебаш', 'еб', 'ебн', 'ебет', 'ебт', 'ебец', 'ебик', 'ебин', 'еб',
                         'ебическая', 'ебк', 'ебл', 'ебла', 'ебливы', 'еблищ', 'ебл', 'еблыст', 'ебля', 'ебнуты', 'бн',
                         'ебнут', 'ебнуться', 'ебня', 'ебош', 'ебская', 'ебск', 'ебтвоюма', 'ебун', 'ебут', 'ебуч',
                         'ебуч', 'ебуч', 'ебуч', 'ебуч', 'ебущ', 'ебыр', 'елд', 'елдак', 'елдач', 'жоп', 'жоп',
                         'заговнят', 'задрачива', 'задриста', 'задрот', 'заеб', 'заеб', 'заеб', 'заеба', 'заебанец',
                         'заебастая', 'заебасты', 'заеба', 'заебаться', 'заебаш', 'заебист', 'забист', 'заебист',
                         'забист', 'заебисты', 'забисты', 'заеб', 'заебош', 'заебываться', 'залуп', 'залуп',
                         'залупаться', 'залуп', 'залупиться', 'замудохаться', 'запиздяч', 'засера', 'засерун', 'засеря',
                         'засира', 'засрун', 'захуяч', 'заябестая', 'злоеб', 'злоебучая', 'злоебуч', 'злоебуч',
                         'ибанамат', 'ибонех', 'изговнят', 'изговняться', 'изъебнуться', 'ипаться', 'ипацц',
                         'какдвапальцаобосса', 'козел', 'козлина', 'конч', 'курв', 'курвятник', 'лох', 'лошар', 'лошар',
                         'лошар', 'лошок', 'лярва', 'малафья', 'манд', 'мандавошек', 'мандавошк', 'мандавошк', 'манд',
                         'манден', 'мандет', 'мандищ', 'мандо', 'манд', 'мандюк', 'минет', 'минетчик', 'минетчиц',
                         'млять', 'мокрощелк', 'мокрощелк', 'мраз', 'мудак', 'мудак', 'мудаг', 'мудак', 'муд', 'мудел',
                         'мудет', 'муд', 'муд', 'муд', 'мудисты', 'мудня', 'мудоеб', 'мудозвон', 'мудоклю', 'нахер',
                         'наху', 'набздел', 'набздет', 'наговнят', 'надриста', 'надроч', 'наеба', 'наебет', 'наебнут',
                         'наебнуться', 'наебыва', 'напиздел', 'напиздел', 'напиздел', 'напизд', 'насра', 'настопизд',
                         'нахер', 'нахр', 'наху', 'нахуиник', 'ебет', 'ебт', 'невротебуч', 'невъебен', 'нехир', 'нехр',
                         'неху', 'нехуиствен', 'ниибац', 'ниипацц', 'ниипацц', 'ниипет', 'никуя', 'нихер', 'нихуя',
                         'обдристаться', 'обосранец', 'обосра', 'обосца', 'обосцаться', 'обсира', 'объебос', 'обьеба',
                         'обьебос', 'однохуиствен', 'опезда', 'опизд', 'опизденивающ', 'остоебен', 'остопиздет',
                         'отмудоха', 'отпизд', 'отпиздяч', 'отпорот', 'отъеб', 'охуевательск', 'охуева', 'охуевающ',
                         'охуел', 'охуен', 'охуеньчик', 'охует', 'охуительн', 'охуительны', 'охуяньчик', 'охуячива',
                         'охуяч', 'очкун', 'падл', 'падонк', 'падонок', 'паскуд', 'педерас', 'педик', 'педрик', 'педр',
                         'педрилл', 'педр', 'педрил', 'пезден', 'пезд', 'пезд', 'пезд', 'пездят', 'пенис', 'перданут',
                         'пердеж', 'перден', 'пердет', 'пердильник', 'перднут', 'прднут', 'пердун', 'пердунец',
                         'пердунин', 'пердунья', 'пердух', 'перд', 'переебок', 'пернут', 'прнут', 'пизд', 'пизд',
                         'пизд', 'пизд', 'пиздец', 'пидр', 'пидар', 'пидарас', 'пидарас', 'пидарас', 'пидар', 'пидор',
                         'пидорас', 'пидорк', 'пидорок', 'пидор', 'пидрас', 'пизд', 'пизданут', 'пиздануться',
                         'пиздарваньчик', 'пиздат', 'пиздат', 'пиздаты', 'пизденк', 'пизденыш', 'пиздныш', 'пиздет',
                         'пиздец', 'пизд', 'пизд', 'пиздиться', 'пизд', 'пиздищ', 'пиздищ', 'пиздобол', 'пиздобол',
                         'пиздобратия', 'пиздоватая', 'пиздоваты', 'пиздолиз', 'пиздонут', 'пиздорванец', 'пиздорванк',
                         'пиздострадател', 'пизд', 'пизду', 'пиздун', 'пиздунья', 'пизд', 'пиздюг', 'пиздюк',
                         'пиздюлин', 'пиздюля', 'пиздят', 'пиздяч', 'писбшк', 'письк', 'писькострадател', 'писюн',
                         'писюшк', 'поху', 'пох', 'подговнят', 'подонк', 'подонок', 'подъебнут', 'подъебнуться',
                         'поеба', 'поебен', 'поебываа', 'поскуд', 'посра', 'потаскух', 'потаскушк', 'пох', 'похер',
                         'похер', 'похер', 'похер', 'похер', 'похр', 'похрен', 'поху', 'похуист', 'похуистк', 'пох',
                         'придурок', 'приебаться', 'припизден', 'припизднуты', 'припиздюлин', 'пробзделся', 'пробляд',
                         'проеб', 'проебанк', 'проеба', 'промандет', 'промудет', 'пропизделся', 'пропиздет',
                         'пропиздяч', 'раздолба', 'разхуяч', 'разъеб', 'разъеб', 'разъеба', 'разъеба', 'распизда',
                         'распиздеться', 'распиздя', 'распиздяиств', 'распроет', 'сволот', 'сволоч', 'сговнят', 'секс',
                         'секел', 'серун', 'серьк', 'сестроеб', 'сикел', 'сира', 'сирыва', 'сос', 'спиздел', 'спиздет',
                         'спизд', 'спизд', 'спизд', 'спизд', 'спизд', 'срак', 'срак', 'сраны', 'сран', 'срат', 'срун',
                         'ссак', 'ссыш', 'стерв', 'страхопиздищ', 'сук', 'сук', 'сучк', 'сучк', 'сук', 'суходрочк',
                         'сучар', 'суч', 'сучк', 'сучк', 'сучонок', 'суч', 'сцан', 'сцат', 'сцук', 'сцук', 'сцукон',
                         'сцул', 'сцых', 'сцыш', 'съебаться', 'сыкун', 'тупо', 'тупая', 'туп', 'тупиц', 'тупизн', 'рлы',
                         'трапездон', 'трахаеб', 'трахаеб', 'трахаб', 'трахател', 'ублюдок', 'урод', 'уеба', 'уебищ',
                         'уебищ', 'убищ', 'уебищн', 'уебищн', 'уебк', 'уебк', 'убк', 'уебок', 'убок', 'урюк',
                         'усраться', 'ушлепок', 'хуяр', 'хуесос', 'хуеплет', 'хуиня', 'хамл', 'хер', 'херня', 'хероват',
                         'херовин', 'херовы', 'хитровыебанны', 'хитрожопы', 'хуеват', 'хуевеньк', 'хуевин', 'хуев',
                         'хуевы', 'хувы', 'хуек', 'хуел', 'хуенч', 'хуеныш', 'хуеньк', 'хуеплет', 'хуеплт',
                         'хуепромышленник', 'хуерик', 'хуер', 'хуесос', 'хуесоск', 'хует', 'хуетен', 'хуик', 'хуиня',
                         'хуирик', 'хуищ', 'хул', 'хуля', 'хуюл', 'хуя', 'хуяк', 'хуяка', 'хуякнут', 'хуяр', 'хуяс',
                         'хуяч', 'целк', 'член', 'чмо', 'чмошник', 'чмыр', 'шалав', 'шалаво', 'шарабиться', 'шлюх',
                         'шлюхо', 'шлюшк', 'чуеженны', 'долдон', 'илд', 'отшмаренная', 'елупен', 'блудугонищ']
    __good_words: list = ['потреблят', 'общеупотребительн', 'лохматы', 'оскорбля', 'употребля', 'блебл', 'психуя',
                          'подстраху', 'неб', 'хлеб', 'рубл', 'сукн', 'команд', 'кончив', 'уступом', 'кончать',
                          'ребеночк', 'ребенок', 'небоскреб', 'себ', 'тебя', 'ослаблят', 'расслаблят', 'забра',
                          'соскреб', 'плох', 'глуб', 'сосед', 'оконч', 'кончено', 'баня', 'баню', 'сосну', 'сосна',
                          'обрубок',
                          'скребет', 'сабля', 'отступая', 'кубки', 'поход', 'губк', 'похуже', 'подступая', 'похудел',
                          'кабан', 'выступая', 'парубок', 'похож', 'ступ', 'банк', 'блох', 'мудро', 'кончил', 'эпох',
                          'факт', 'аббат', 'дубки', 'зубки', 'дебош', 'осекся', 'рубище', 'перл', 'клубок', 'кассира',
                          'ярлык', 'кончите', 'кончины', 'пенист', 'соскуча', 'маху', 'греб', 'шуб', 'бату', 'орлы',
                          'бане', 'скипидар', 'кончики', 'сосен', 'нехуд', 'худ', 'бата'
                          ]
    __substitutions: dict = {'а': ['а', 'a', '@'],
                             'б': ['б', '6', 'b'],
                             'в': ['в', 'b', 'v'],
                             'г': ['г', 'r', 'g'],
                             'д': ['д', 'd', 'g'],
                             'е': ['е', 'e'],
                             'ё': ['ё', 'e'],
                             'ж': ['ж', 'zh', '*'],
                             'з': ['з', '3', 'z'],
                             'и': ['и', 'u', 'i'],
                             'й': ['й', 'u', 'i'],
                             'к': ['к', 'k', 'i{', '|{'],
                             'л': ['л', 'l', 'ji'],
                             'м': ['м', 'm'],
                             'н': ['н', 'h', 'n'],
                             'о': ['о', 'o', '0'],
                             'п': ['п', 'n', 'p'],
                             'р': ['р', 'r', 'p'],
                             'с': ['с', 'c', 's'],
                             'т': ['т', 'm', 't'],
                             'у': ['у', 'y', 'u'],
                             'ф': ['ф', 'f'],
                             'х': ['х', 'x', 'h', '}{'],
                             'ц': ['ц', 'c', 'u,'],
                             'ч': ['ч', 'ch'],
                             'ш': ['ш', 'sh'],
                             'щ': ['щ', 'sch'],
                             'ь': ['ь', 'b'],
                             'ы': ['ы', 'bi'],
                             'ъ': ['ъ'],
                             'э': ['э', 'e'],
                             'ю': ['ю', 'io'],
                             'я': ['я', 'ya']
                             }
    __modified_text: str
    __modified_words: list
    origin_text: str
    frequency: float

    def __init__(self, text, frequency=0.5):
        self.frequency = frequency
        self.origin_text = text.lower()
        self.__modified_text = text.lower().replace(' ', '')

    def __substitute(self):
        # Проходимся по нашему словарю.
        for key, value in self.__substitutions.items():
            # Проходимся по каждой букве в значении словаря. То есть по вот этим спискам ['а', 'a', '@'].
            for letter in value:
                # Проходимся по каждой букве в нашей фразе.
                self.origin_text = self.origin_text.replace(letter, key)
                self.__modified_text = self.__modified_text.replace(letter, key)

    def __only_letters(self):
        self.__modified_words = self.origin_text.split()
        for idx, word in enumerate(self.__modified_words):
            self.__modified_words[idx] = re.sub(r'[\W\d_]', '', word)
        self.__modified_text = re.sub(r'[\W\d_]', '', self.__modified_text)

    def __erase_good_words(self):
        new_modified_words = []
        for modified_word in self.__modified_words:
            flag = 0
            for good_word in self.__good_words:
                flag += good_word in modified_word
            if flag == 0:
                new_modified_words.append(modified_word)
        self.__modified_words = new_modified_words
        for good_word in self.__good_words:
            self.__modified_text = self.__modified_text.replace(good_word, '')

    def find_bad_words(self):
        self.__substitute()
        self.__only_letters()
        self.__erase_good_words()
        bad_words = set()
        for bad_word in self.__bad_words:
            if bad_word in self.__modified_text:
                for word in self.__modified_words:
                    if bad_word in word:
                        if len(bad_word) / len(word) > self.frequency:
                            bad_words.add(word)
                            break
        return list(bad_words)
